buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.13'
    }
}

plugins {
    id "com.google.protobuf" version "0.8.13"
    id "java"
    id "application"
    id "idea"
    id 'com.github.ben-manes.versions' version '0.19.0'
}

group 'org.example'
version '1.0-SNAPSHOT'

protobuf {
    protoc {
        // The version of protoc must match protobuf-java. If you don't depend on
        // protobuf-java directly, you will be transitively depending on the
        // protobuf-java version that grpc depends on.
        artifact = "com.google.protobuf:protoc:3.6.0"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.12.0'
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
    generatedFilesBaseDir = "$projectDir/src/generated"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'junit:junit:4.11'
    // The following dependencies will be the ear modules and
    // will be placed in the ear root
    // deploy project(':war')

    // The following dependencies will become ear libs and will
    // be placed in a dir configured via the libDirName property
    // earlib group: 'log4j', name: 'log4j'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    runtimeOnly 'io.grpc:grpc-netty-shaded:1.45.1'
    implementation 'io.grpc:grpc-protobuf:1.45.1'
    implementation 'io.grpc:grpc-stub:1.45.1'
    compileOnly 'org.apache.tomcat:annotations-api:6.0.53' // necessary for Java 9+
}

idea {
    module {
        sourceDirs += file("${projectDir}/src/generated/main/java");
        sourceDirs += file("${projectDir}/src/generated/main/grpc");
    }
}

task runServer(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'org.example.HelloWorldServer'
}

task runClient(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'org.example.HelloWorldClient'
}

startScripts.enabled = false

task helloWorldServer(type: CreateStartScripts) {
    apply plugin: 'application'
    applicationName = "hello-world-server"
    outputDir = new File(project.buildDir, 'tmp')
    classpath = jar.outputs.files + project.configurations.runtimeClasspath
    helloWorldServer.mainClassName = "org.example.HelloWorldServer"
}

task helloWorldClient(type: CreateStartScripts) {
    apply plugin: 'application'
    applicationName = "hello-world-client"
    outputDir = new File(project.buildDir, 'tmp')
    classpath = jar.outputs.files + project.configurations.runtimeClasspath
    helloWorldClient.mainClassName = "org.example.HelloWorldClient"
}

applicationDistribution.into("bin") {
    from(helloWorldServer)
    from(helloWorldClient)
    fileMode = 0755
}